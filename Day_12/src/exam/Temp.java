package exam;

public class Temp {	
	public int a; /*인스턴스 멤버 필드  
	=10 해도 안들어감   뉴해야 만들어짐 
	이상태에서는  아직 안 만듬
	new 하면 이때 생성   
	그러나 스택틱은 다름
	인스턴스를 만들어야먄 변수 생성 
	*/
	// public static   
	/*static = 정적  데이터 메모리 사용*/ public static int b; /*클래스 멤버 필드
	지역변수,멤버변수  생겼다 지워졌다  타이밍도 중구난방
	static 은 지워지지 않는다
	static 은 메인과 동시 실행     , 인스턴스와 별개
	// 인스턴스 안에 들어 있지 않음   : 즉 힙이 아닌 데이터 메모리를 사용한다  // 클래스랑 관계는 크게 있지 않음
	static(가장 먼저 실행되는 코드들) 기능 : 
	static public : 언제 어디서나 
	그냥 클래스만 만들어도 변수 생성   접근할려면 클래스에 . 찍어야 함
	*/
	private static int c ;  // 우리들끼리의 변수 
	// 클래스 내부  // 인스턴스의만이 공유할수 있는 변수     c 는 데이터에 저장되어 있는 놈이라서 내부적인 인스턴스애들만 쓸수 있다
	
	/* static 사용의의 
	 * 장점 :
	 * 데이터 저장이 성능이 좋다   , 편리함 
	 * 다양한 스코프(범위)에서 접근이 편리하다     
	 * 지역변수 등에 비해 상대적으로 미세하게 성능이 좋다 
	 *  단점 : 
	 * 이름관리 어려움 [ 전지역이 때문에  전체를 염두 하고 사용을 해야한다 ] 
	 *  다중스레드 여러개 일때   값이 꼬이기 시작함 
	 *  메모리 효율성이 떨어짐 (일반 인스턴스 멤버 변수는 사용하고 사라짐  메모리 반환)
	 *  인스턴스 지우라는 문법은 없으나   null값을 넣어서  주소를 없애는 개념   - 가비지 컬랙터(양날의 칼):항상 튜닝이라는 이슈가 따름 
	 *  반면 static은 지울스 있는 방법 없음 게다가 main 시작하자마자 생김   프로그램이 종료될때까지 있음   :최근 컴퓨터가 좋아져서 별 상관은 없지만 효율성은 떨어진다는점
	 *  
	 *  사용할때 생각할것 : 절대 남발하지 말것 , 정말 필요할때 
	 *  쓰임새 :   전체에서 살아남아야함  메모리가 내려가선 안될떄  ,  Ex: 주인공 정보
	 *  한편 마왕은 처음부터 생성하고 끝까지 있을필요는 없다 -> 마왕성에 들어갔을때 나타나와야 함   / 몬스터는 지역변수 
	 *  
	 *  
	 *  주의사항 : 
	 *  
	 *  
	 * */
	// 인스턴스를 안만들어도 만들어짐 
	
	public static void func2() { // 클래스 메소드
		//a=10; // 인스턴스 생성안해서
		// 인스턴스 멤버 a를 쓸수 없음 //  a 가 생성되었다고  확신 할수 없는 상태이기 때문 
		Temp t = new Temp();
		t.a=10;//a 가 만들어 져 있는 상태는 아님 
		b=20;
	}
	
	public void func1() { //  인스턴스 멤버 메소드  
		//   아직 인스턴스를 부르지 않았다  
		// 인스턴스 필드 
		a=10;  // 사용할려고 할때 인스턴스 같이 생성되어있는 상태이겠지
		b=20; 
	}
	
}
