package exam;

public class Exam_01 {

	public static void main(String[] args) {
		//객체지향    :  절차에 따라서  초점은 시간의 흐름
		//C 언어: 원리주의 효률주의
		/*
		  Exam 영화 : 매트리스
		  세계관 : 객체지점   
		  : 인공지능이 너무 발달되어서 전쟁이 됨 기계가 승 
		  태양열을 받지 못해  사람한테 에너지 얻음 , 아무생각없이그런거 없으면 오래동안 하지 못하니 생각하고 움직이게 해야 하니 가상현실을 만듬
		  세상에 모든 물건을 변수로 만들어 네트워크로 만듬  가상의 세상을 전부 연결 시킴 그래서 오래동안 열을 발생
		  프로그램 세상  
		  
		   모든것들을 코드로 만든 가상의 물체  
		   물건 - 객체
		   현실처럼 가져다 쓰는것 
		  */
		//OOP [Object Oriented Programing]  
		/*
		 1.무엇을 만들지 선택함  [결정대상 : 물리적으로 존재한것,물리적으로 존재하지 않지만 실제로 존재한것(논리적은것)]
		 2.먼저 요소를 분석을 초첨   대상분석
		 ㄴ 분석하는 방법  : 
		    기능(수행할수 있는 능력 : 밝기,해상도 ,키고끄기 ::[메소드])과 
		    속성(대상이 가지고 있는 정보:색상 ,가격,크기,제조사 :: [변수(int,double,String,RGB(int,color))]) 
		    // 여기까지는 계획가능 
		 3. 설계도 작성  [소스코드가 존재] : 클래스(우리가 그 아는 클래스)  코딩  //Class : 설계도
		 /-/ 그동안 우리가 했던건  클래스를 만들었지만 그 설계도를 만들고 설께를 하지 않음 
		  * 규칙이 있음 : 모든게 클래스 안에만 있음  (import, packge 제외 )
		  * 문제가 생김 : 클래스는 1개는 어쩔수 설계 용도가 아님  []Main:설계도에 들어가면 안됨[] 1개는 총대는 메야됨 (즉  Main 때문에 클래스한개는 설계용도가 아닌거을 만들어야함)
		  *  main 은 프로그램 시작점
		 //
		   class 바탕으로 만들어야 ↓
		 4.  실체화
		 --
		  객체관의 관께 무엇이 중요한가
		  절차 지향보다 속도가 빠름 
		  ---
		  코드 관리 기법    
		  
		 
		 */
	}

}
